<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blog">
	<!-- 블로그 추가 -->
	<select id="insertBlog" parameterType="blogvo">
		<![CDATA[
			insert into blog values(#{id}, #{title}, #{profile})
		]]>
	</select>
	
	<!-- 카테고리 내 게시글 목록 조회 -->
	<select id="findPostsByCategoryId" resultType="postvo" parameterType="map">
		<![CDATA[
			select post.id as id, title, contents, reg_date as regDate, category_id as categoryId from post join category on category_id = category.id where category_id=#{categoryId} and blog_id = #{userId}
		]]>
	</select>
	
	<!-- 전체 게시글 목록 조회 -->
	<select id="findAllPosts" resultType="postvo">
		<![CDATA[
			select post.id as id, title, contents, reg_date as regDate, category_id as categoryId from post join category on category_id = category.id where blog_id = #{userId}
		]]>
	</select>
	
	<!-- 게시글 조회 -->
	<select id="findPostById" resultType="postvo">
		<![CDATA[
			select id, title, contents, reg_date as regDate from post where id=#{postId}
		]]>
	</select>
	
	<!-- 전체에서 첫번째 게시글 조회 -->
	<select id="findFirstPost" resultType="postvo">
		<![CDATA[
			select post.id as id, title, contents, reg_date as regDate from post join category on category_id = category.id where blog_id = #{blogId} limit 1;
		]]>
	</select>
	
	<!-- 카테고리에서 첫번째 게시글 조회 -->
	<select id="findFirstPostOfCategory" resultType="postvo" parameterType="map">
		<![CDATA[
			select post.id as id, title, contents, reg_date as regDate from post join category on category_id = category.id where category_id=#{categoryId} and blog_id = #{userId} limit 1;
		]]>
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="insertPost" parameterType="postvo">
		<![CDATA[
			insert into post values(null, #{title}, #{contents}, now(), #{categoryId})
		]]>
	</insert>
	
	<!-- 카테고리 목록 조회 -->
	<select id="selectCategories" resultType="categoryvo">
		<![CDATA[
			select category.id, name, description, count(category_id) as postCnt from category left join post on category.id = category_id where blog_id=#{blogId} group by category.id, post.id;
		]]>
	</select>
	
	<!-- 카테고리 추가 -->
	<insert id="insertCategory" parameterType="categoryvo">
		<![CDATA[
		insert into category values(null, #{name}, #{description}, #{blogId})
		]]>
		<selectKey keyProperty="id" resultType="long" order="AFTER">
			<![CDATA[
				select last_insert_id() from dual
			]]>
		</selectKey>
	</insert>
	
	<!-- 카테고리 삭제 -->
	<delete id="deleteCategoryById">
		<![CDATA[
		delete from category where id=#{categoryId};
		]]>
	</delete>
	
	<!-- 카테고리 내 전체 게시글 삭제 -->
	<delete id="deletePostByCategoryId">
		<![CDATA[
		delete from post where category_id=#{categoryId};
		]]>
	</delete>
	
	<!-- 관리자 블로그 정보 조회 -->
	<select id="findBlogById" resultType="blogvo">
		<![CDATA[
		select title, profile from blog where blog_id=#{blogId};
		]]>
	</select>
	
	<!-- 관리자 블로그 정보 수정 -->
	<update id="updateBlog" parameterType="blogvo">
		<![CDATA[
		update blog set title=#{title}, profile=#{profile} where blog_id = #{id}
		]]>
	</update>
</mapper>
